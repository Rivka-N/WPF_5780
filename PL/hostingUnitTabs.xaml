<Window x:Class="PL.hostingUnitTabs"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
       xmlns:BE="clr-namespace:BE;assembly=BE" 
      d:DesignHeight="450" d:DesignWidth="800"
        Closing="Window_Closing"
        Title="Personal Area" Height="600" Width="1000" Loaded="Window_Loaded_1"
        WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <CollectionViewSource x:Key="orderViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Order}, CreateList=True}"/>
        <CollectionViewSource x:Key="guestRequestViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:GuestRequest}, CreateList=True}"/>
       
        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Width" Value="auto"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Width" Value="auto"/>
        </Style>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="MinHeight" Value="100"/>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tc_mainControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Name="tab_updateDeleteUnit" Header="delete /update unit" Selector.Unselected="Tab_updateDeleteUnit_Unselected">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="2" Background="DarkSeaGreen">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="pb_update" Content="Update Unit" Padding="10" Margin="5" IsEnabled="False" Grid.Column="5" Click="pb_update_Click"/>
                        <Button x:Name="pb_delete" Content="Delete Unite" Padding="10" Margin="5" Grid.Column="4" IsEnabled="True" Click="pb_delete_Click"/>
                        <Button x:Name="pb_UnitBack" Content="Back" HorizontalAlignment="Left" Margin="10,5" Padding="20,10"  Grid.Column="0" Click="Pb_back_Click"/>
                    </Grid>

                    <Grid Grid.Row="0" x:Name="dg_unit">
                        <Grid x:Name="dg_updateUnitGrid" HorizontalAlignment="Center" Margin="10,10,0,0" VerticalAlignment="Center" Width="300" DataContext="{Binding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="Garden:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="9" VerticalAlignment="Center"/>
                            <CheckBox x:Name="gardenCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Right" IsChecked="{Binding Garden, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="0,9.2,105,8.8" Grid.Row="9" VerticalAlignment="Center" Checked="gardenCheckBox_Checked"/>
                            <Label Content="Hosting Unit Key:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                            <TextBox x:Name="hostingUnitKeyTextBox" Grid.Column="1" IsReadOnly="True" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding HostingUnitKey, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" TextChanged="hostingUnitKeyTextBox_TextChanged"/>
                            <Label Content="Hosting Unit Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                            <TextBox x:Name="hostingUnitNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,0,0,4" Grid.Row="2" Text="{Binding HostingUnitName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Bottom" Width="120" TextChanged="hostingUnitNameTextBox_TextChanged"/>
                            <Label Content="Hosting Unit Type:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                            <ComboBox x:Name="hostingUnitTypeComboBox" Grid.Column="1" DisplayMemberPath="HostingUnitType" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="3" VerticalAlignment="Center" Width="120" SelectionChanged="hostingUnitTypeComboBox_SelectionChanged">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <Label Content="Jacuzzi:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                            <CheckBox x:Name="jacuzziCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Jacuzzi, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="7" VerticalAlignment="Center" Checked="jacuzziCheckBox_Checked"/>
                            <Label Content="Meal:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                            <ComboBox x:Name="mealComboBox" Grid.Column="1" DisplayMemberPath="Meal" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="4" VerticalAlignment="Center" Width="120" SelectionChanged="mealComboBox_SelectionChanged">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <Label Content="Num Adult:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                            <TextBox x:Name="numAdultTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="6" Text="{Binding NumAdult, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" TextChanged="numAdultTextBox_TextChanged"/>
                            <Label Content="Num Children:" Grid.Column="0" Grid.Row="5"/>
                            <TextBox x:Name="numChildrenTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Text="{Binding NumChildren, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" TextChanged="numChildrenTextBox_TextChanged"/>
                            <Label Content="Pool:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                            <CheckBox x:Name="poolCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Pool, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="8" VerticalAlignment="Center" Checked="poolCheckBox_Checked"/>
                            <Label Content="Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                            <TextBox x:Name="tb_nameTextBox" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="True" Height="23" Margin="3" Grid.Row="0" Text="{Binding Host.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" TextChanged="nameTextBox_TextChanged"/>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Name="tab_addOrders" Header="add order" Selector.Unselected="Tab_addOrders_Unselected">
                <Grid DataContext="{StaticResource guestRequestViewSource}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="1" Background="MediumSeaGreen">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="im_GuestSearch" Stretch="Uniform" Grid.Column="0" Style="{StaticResource s_imageIcon}" Margin="5,0,0,0" Source="http://t2.gstatic.com/images?q=tbn:ANd9GcT0W7-WTWv2PuxQnuXVOElowgBcXOa9-LoH5BYGr-tvHxAcivldm-N1TNha"/>
                                <TextBox x:Name="tb_addOrder_SearchTextBox" Grid.Column="1" Width="auto" MinWidth="100" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" TextChanged="Tb_closed_SearchTextBox_TextChanged" />
                            </Grid>
                            <Label x:Name="lb_addOrder_vacationDate" Content="Vacation Start" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <DatePicker x:Name="dp_addOrderDate" HorizontalAlignment="Center"/>
                            <Button Name="pb_addorder_resetDate" Content="Reset" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Margin="5" />

                            <Expander Header="Request Details" Height="auto" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Name="lb_addorder_child" Grid.Column="0" Content="Children" HorizontalAlignment="Center"/>
                                        <Label Name="lb_addorder_adult" Content="Adults" Grid.Column="1" HorizontalAlignment="Center" MinWidth="50" VerticalAlignment="Center" />
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox x:Name="tb_addOrder_child" Grid.Column="0" Width="auto" MinWidth="25" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5"/>
                                        <TextBox x:Name="tb_addOrder_adult" Grid.Column="1"  Width="auto" MinWidth="25" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5"/>
                                    </Grid>
                                    <Label x:Name="lb_addOrder_meal" Grid.Row="3" Content="Meal Type" Width="auto" MinWidth="50"/>
                                    <ComboBox x:Name="cb_addorder_meal" ItemsSource="{Binding}"/>
                                    <CheckBox x:Name="lb_addOrder_garden" Grid.Row="0" Content="Garden" Margin="5"/>
                                    <CheckBox x:Name="lb_addOrder_pool" Grid.Row="1" Content="Pool" Margin="5"/>
                                    <CheckBox x:Name="lb_addOrder_jaccuzi" Grid.Row="2" Content="Jaccuzzi" Margin="5"/>

                                </StackPanel>
                            </Expander>

                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="1" Background="DarkSeaGreen" Grid.ColumnSpan="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="pb_addOrder" Content="Add Order" Padding="10" Margin="5" Click="pb_addOrder_Click" IsEnabled="False" Grid.Column="5"/>
                        <Button x:Name="pb_sendMail" Content="Send Mail" Padding="10" Margin="5" Grid.Column="4" IsEnabled="False" Click="pb_sendMail_Click"/>
                        <Button x:Name="pb_back" Content="Back" HorizontalAlignment="Left" Margin="10,5" Padding="20,10"  Grid.Column="0" Click="Pb_back_Click"/>
                    </Grid>
                    <Grid Grid.Row="0">
                          <Grid.Background>
                                <RadialGradientBrush>
                                    <GradientStop Color="BlueViolet" Offset="1"/>
                                    <GradientStop Color="IndianRed"/>
                                    <GradientStop Color="Thistle" Offset="0.25"/>
                                </RadialGradientBrush>
                            </Grid.Background>
                    <DataGrid x:Name="dg_guestRequestDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" IsReadOnly="True" RowDetailsVisibilityMode="VisibleWhenSelected" SelectionChanged="dg_guestRequestDataGrid_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="nameColumn" Binding="{Binding Name}" Header="Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTemplateColumn x:Name="entryDateColumn" Header="Entry Date" Width="*" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding EntryDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="releaseDateColumn" Header="Release Date" Width="*" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding ReleaseDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn x:Name="gardenColumn" Binding="{Binding Garden}" Header="Garden" Width="SizeToHeader" MinWidth="50" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn x:Name="jacuzziColumn" Binding="{Binding Jacuzzi}" Header="Jacuzzi" Width="SizeToHeader" MinWidth="50" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn x:Name="poolColumn" Binding="{Binding Pool}" Header="Pool" Width="SizeToHeader" MinWidth="50" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="mealColumn" Binding="{Binding Meal}" Header="Meal" Width="*" MinWidth="50" IsReadOnly="True"/>

                            <DataGridTextColumn x:Name="numAdultColumn" Binding="{Binding NumAdult}" Header="Adults" Width="*" MinWidth="50" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="numChildrenColumn" Binding="{Binding NumChildren}" Header="Children" Width="*" MinWidth="50" IsReadOnly="true"/>
                        </DataGrid.Columns>
                    </DataGrid>
                        <TextBlock Name="tb_guest_error" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Visibility="Collapsed" Foreground="White" FontSize="40">
                        <TextBlock.Effect>
                            <DropShadowEffect/>
                        </TextBlock.Effect>
                    </TextBlock>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Name="tab_closedOrders" Header="Closed Orders">
                <Grid DataContext="{StaticResource orderViewSource}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" Background="MediumSeaGreen">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="im_closedOrdersSearch" Stretch="Uniform" Grid.Column="0" Style="{StaticResource s_imageIcon}" Margin="5,0,0,0" Source="http://t2.gstatic.com/images?q=tbn:ANd9GcT0W7-WTWv2PuxQnuXVOElowgBcXOa9-LoH5BYGr-tvHxAcivldm-N1TNha"/>
                                <TextBox x:Name="tb_closed_SearchTextBox" Grid.Column="1" Width="auto" MinWidth="100" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" TextChanged="Tb_closed_SearchTextBox_TextChanged" />

                            </Grid>
                            
                            <Label x:Name="lb_closed_Date" Content="Request Created" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <DatePicker x:Name="dp_closed_orderDate" HorizontalAlignment="Center" SelectedDateChanged="Dp_closed_orderDate_SelectedDateChanged" Margin="5,0"/>
                            <Button Name="pb_closed_resetDate" Content="Reset" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Click="Pb_closed_resetDate_Click"/>

                        </StackPanel>
                    </Grid>
                    <DataGrid x:Name="dg_orderDataGrid" Grid.Row="0" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="dg_addOrdercreateDateColumn" Header="Create Date" Width="SizeToHeader" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding CreateDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="dg_addOrderguestNameColumn" Binding="{Binding GuestName}" Header="Guest Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderRequestKeyColumn" Binding="{Binding GuestRequestKey}" Header="Guest Request Key" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderhostingUnitKeyColumn" Binding="{Binding HostingUnitKey}" Header="Hosting Unit Key" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderhostNameColumn" Binding="{Binding HostName}" Header="Host Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTemplateColumn x:Name="dg_addorderDateColumn" Header="Order Date" Width="*" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding OrderDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="dg_addOrderKey" Binding="{Binding OrderKey}" Header="Order Key" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderstatus" Binding="{Binding Status}" Header="Status" Width="*" MinWidth="100" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="2" Background="DarkSeaGreen" Grid.ColumnSpan="5">
                        <Button x:Name="pb_ClosedOrdersBack" Content="Back" HorizontalAlignment="Left" Margin="10,5" Padding="20,10"  Grid.Column="0" Click="Pb_back_Click"/>
                    </Grid>
                    <TextBlock Name="tb_order_error" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Visibility="Collapsed" Foreground="White" FontSize="40">
                        
                    </TextBlock>
                </Grid>
                
            </TabItem>

        </TabControl>
    </Grid>
</Window>


