<Window x:Class="PL.hostingUnitTabs"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
       xmlns:BE="clr-namespace:BE;assembly=BE" 
      d:DesignHeight="450" d:DesignWidth="800"
        Closing="Window_Closing"
        Title="Personal Area" Height="600" Width="1000" Loaded="Window_Loaded_1"
        WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <CollectionViewSource x:Key="orderViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Order}, CreateList=True}"/>
        <CollectionViewSource x:Key="guestRequestViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:GuestRequest}, CreateList=True}"/>
       
        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Width" Value="auto"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Width" Value="auto"/>
        </Style>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="MinHeight" Value="100"/>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tc_mainControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Name="tab_updateDeleteUnit" Header="delete /update unit" Selector.Unselected="Tab_updateDeleteUnit_Unselected">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="2" Background="DarkSeaGreen">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="pb_update" Content="Update Unit" Padding="10" Margin="5" IsEnabled="False" Grid.Column="5" Click="pb_update_Click"/>
                        <Button x:Name="pb_delete" Content="Delete Unite" Padding="10" Margin="5" Grid.Column="4" IsEnabled="True" Click="pb_delete_Click"/>
                        <Button x:Name="pb_UnitBack" Content="Back" HorizontalAlignment="Left" Margin="10,5" Padding="20,10"  Grid.Column="0" Click="Pb_UnitBack_Click" />
                    </Grid>

                    <Grid Grid.Row="0" x:Name="dg_unit">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="dg_updateUnitGrid" HorizontalAlignment="Right" Margin="50,20" VerticalAlignment="Top" Width="auto" DataContext="{Binding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                             <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>

                            </Grid.RowDefinitions>
                            <Label VerticalAlignment="Center" Grid.Row="6" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Area Vacation:"/>
                            <ComboBox x:Name="cb_area" Width="120" VerticalAlignment="Center" Text="{Binding AreaVacation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="6" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" SelectionChanged="Cb_area_SelectionChanged"/>
                            <Label VerticalAlignment="Center" Grid.Row="13" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Garden:"/>
                            <CheckBox x:Name="cb_gardenCheckBox" VerticalAlignment="Center" Grid.Row="13" Margin="3" HorizontalAlignment="Left" Grid.Column="1" Unchecked="gardenCheckBox_Checked" Checked="gardenCheckBox_Checked"/>
                            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Hosting Unit Key:"/>
                            <TextBox x:Name="tb_unitKey" IsReadOnly="True" Width="120" VerticalAlignment="Center" Text="{Binding HostingUnitKey}" Grid.Row="4" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                            <Label VerticalAlignment="Center" Grid.Row="5" Margin="4" HorizontalAlignment="Left" Grid.Column="0" Content="Hosting Unit Name:"/>
                            <TextBox x:Name="tb_unitname" Width="120" VerticalAlignment="Center" Text="{Binding HostingUnitName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" LostFocus="Tb_unitname_LostFocus"/>
                            <Label VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Hosting Unit Type:"/>
                            <ComboBox x:Name="cb_updateUnitType" Width="120" VerticalAlignment="Center" Text="{Binding HostingUnitType, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" SelectionChanged="cb_hostingUnitType_SelectionChanged"/>

                            <Label VerticalAlignment="Center" Grid.Row="11" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Jacuzzi:"/>
                            <CheckBox x:Name="cb_jacuzziCheckBox" VerticalAlignment="Center" Grid.Row="11" Margin="3" HorizontalAlignment="Left" Grid.Column="1" Unchecked="jacuzziCheckBox_Checked" Checked="jacuzziCheckBox_Checked"/>
                            <Label VerticalAlignment="Center" Grid.Row="8" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Meal:"/>
                            <ComboBox x:Name="cb_meal" Width="120" VerticalAlignment="Center" Text="{Binding Meal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="8" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                            <Label VerticalAlignment="Center" Grid.Row="10" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Num Adult:"/>
                            <TextBox x:Name="tb_numAdultTextBox" Grid.Row="10" Margin="3.4,0,0,4.6"  Text="{Binding NumAdult, Mode=OneTime}" Style="{StaticResource s_numPeople}" Grid.Column="1" LostFocus="Tb_numAdultTextBox_LostFocus"/>
                            <Label VerticalAlignment="Center" Grid.Row="9" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Num Children:"/>
                            <TextBox x:Name="tb_numChildrenTextBox" Text="{Binding NumChildren, Mode=OneTime}" Style="{StaticResource s_numPeople}" Grid.Row="9" Margin="3" Grid.Column="1" LostFocus="Tb_numChildrenTextBox_LostFocus"/>
                            <Label VerticalAlignment="Center" Grid.Row="12" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Pool:"/>
                            <CheckBox x:Name="cb_poolCheckBox" VerticalAlignment="Center" Grid.Row="12" Margin="3" HorizontalAlignment="Left" Grid.Column="1" Unchecked="poolCheckBox_Checked" Checked="poolCheckBox_Checked"/>
                            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Last Name:"/>
                            <TextBox x:Name="tb_lastName" Width="120" VerticalAlignment="Top" Text="{Binding Host.LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="3.4,4,0,0" Height="24" HorizontalAlignment="Left" Grid.Column="1" LostFocus="Tb_lastName_LostFocus"/>
                            <Label VerticalAlignment="Center" Grid.Row="0" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Name:"/>
                            <TextBox x:Name="tb_name" Width="120" VerticalAlignment="Center" Text="{Binding Host.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="0" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" LostFocus="Tb_name_LostFocus"/>
                            <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Phone:"/>
                            <TextBox x:Name="tb_phone" Width="120" VerticalAlignment="Top" Text="{Binding Host.Phone}" Grid.Row="2" Margin="3,4,0,0" Height="24" HorizontalAlignment="Left" Grid.Column="1" LostFocus="Tb_phone_LostFocus"/>
                            <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Email:"/>
                            <TextBox x:Name="tb_mail" Width="120" VerticalAlignment="Top" Grid.Row="3" Margin="3,4,0,0" Height="24" HorizontalAlignment="Left" Grid.Column="1" LostFocus="Tb_mail_LostFocus"/>

                        </Grid>

                        <Grid x:Name="dg_bank" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50,20" DataContext="{Binding Host}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="Bank Acount Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                            <TextBox x:Name="bankAcountNumberTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Bank.BankAcountNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Bank Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                            <TextBox x:Name="bankNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Bank.BankName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Bank Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                            <TextBox x:Name="bankNumberTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Bank.BankNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Branch Address:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                            <TextBox x:Name="branchAddressTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding Bank.BranchAddress, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Branch City:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                            <TextBox x:Name="branchCityTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="4" Text="{Binding Bank.BranchCity, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Branch Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                            <TextBox x:Name="branchNumberTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Text="{Binding Bank.BranchNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            <Label Name="lb_collectionClearance" Content="collection clearance:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                            <CheckBox x:Name="cb_collectionClearance" Grid.Column="1" Margin="3" HorizontalAlignment="Left" Grid.Row="6" IsChecked="{Binding CollectionClearance, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Unchecked="Cb_collectionClearance_Checked" Checked="Cb_collectionClearance_Checked"/>

                        </Grid>
                    </Grid>
                    

                </Grid>
            </TabItem>
            <TabItem Name="tab_addOrders" Header="add order" Selector.Unselected="Tab_addOrders_Unselected">
                <Grid DataContext="{StaticResource guestRequestViewSource}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="1" Background="MediumSeaGreen">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="im_GuestSearch" Stretch="Uniform" Grid.Column="0" Style="{StaticResource s_imageIcon}" Margin="5,0,0,0" />
                                <TextBox x:Name="tb_addOrder_SearchTextBox" Grid.Column="1" Width="auto" MinWidth="100" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" TextChanged="Tb_closed_SearchTextBox_TextChanged" />
                            </Grid>
                            <Label x:Name="lb_addOrder_vacationDate" Content="Vacation Start" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <DatePicker x:Name="dp_addOrderDate" HorizontalAlignment="Center"/>
                            <Button Name="pb_addorder_resetDate" Content="Reset" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Margin="5" />

                            <Expander Header="Request Details" Height="auto" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Name="lb_addorder_child" Grid.Column="0" Content="Children" HorizontalAlignment="Center"/>
                                        <Label Name="lb_addorder_adult" Content="Adults" Grid.Column="1" HorizontalAlignment="Center" MinWidth="50" VerticalAlignment="Center" />
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox x:Name="tb_addOrder_child" Grid.Column="0" Width="auto" MinWidth="25" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5"/>
                                        <TextBox x:Name="tb_addOrder_adult" Grid.Column="1"  Width="auto" MinWidth="25" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5"/>
                                    </Grid>
                                    <Label x:Name="lb_addOrder_meal" Grid.Row="3" Content="Meal Type" Width="auto" MinWidth="50"/>
                                    <ComboBox x:Name="cb_addorder_meal" ItemsSource="{Binding}"/>
                                    <CheckBox x:Name="lb_addOrder_garden" Grid.Row="0" Content="Garden" Margin="5"/>
                                    <CheckBox x:Name="lb_addOrder_pool" Grid.Row="1" Content="Pool" Margin="5"/>
                                    <CheckBox x:Name="lb_addOrder_jaccuzi" Grid.Row="2" Content="Jaccuzzi" Margin="5"/>

                                </StackPanel>
                            </Expander>

                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="1" Background="DarkSeaGreen" Grid.ColumnSpan="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="pb_addOrder" Content="Add Order" Padding="10" Margin="5" Click="pb_addOrder_Click" IsEnabled="False" Grid.Column="5"/>
                        <Button x:Name="pb_sendMail" Content="Send Mail" Padding="10" Margin="5" Grid.Column="4" IsEnabled="False" Click="pb_sendMail_Click"/>
                        <Button x:Name="pb_back" Content="Back" HorizontalAlignment="Left" Margin="10,5" Padding="20,10"  Grid.Column="0" Click="Pb_back_Click"/>
                    </Grid>
                    <Grid Grid.Row="0">
                          <Grid.Background>
                                <RadialGradientBrush>
                                    <GradientStop Color="SeaGreen" Offset="1"/>
                                    <GradientStop Color="MediumSeaGreen"/>
                                    <GradientStop Color="LightSeaGreen" Offset="0.25"/>
                                </RadialGradientBrush>
                            </Grid.Background>
                    <DataGrid x:Name="dg_guestRequestDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" IsReadOnly="True" RowDetailsVisibilityMode="VisibleWhenSelected" SelectionChanged="dg_guestRequestDataGrid_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="nameColumn" Binding="{Binding Name}" Header="Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTemplateColumn x:Name="entryDateColumn" Header="Entry Date" Width="*" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding EntryDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="releaseDateColumn" Header="Release Date" Width="*" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding ReleaseDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn x:Name="gardenColumn" Binding="{Binding Garden}" Header="Garden" Width="SizeToHeader" MinWidth="50" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn x:Name="jacuzziColumn" Binding="{Binding Jacuzzi}" Header="Jacuzzi" Width="SizeToHeader" MinWidth="50" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn x:Name="poolColumn" Binding="{Binding Pool}" Header="Pool" Width="SizeToHeader" MinWidth="50" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="mealColumn" Binding="{Binding Meal}" Header="Meal" Width="*" MinWidth="50" IsReadOnly="True"/>

                            <DataGridTextColumn x:Name="numAdultColumn" Binding="{Binding NumAdult}" Header="Adults" Width="*" MinWidth="50" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="numChildrenColumn" Binding="{Binding NumChildren}" Header="Children" Width="*" MinWidth="50" IsReadOnly="true"/>
                        </DataGrid.Columns>
                    </DataGrid>
                        <TextBlock Name="tb_guest_error" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Visibility="Collapsed" Foreground="White" FontSize="40">
                        <TextBlock.Effect>
                            <DropShadowEffect/>
                        </TextBlock.Effect>
                    </TextBlock>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Name="tab_closedOrders" Header="Closed Orders">
                <Grid DataContext="{StaticResource orderViewSource}">
                    <Grid.Background>
                        <RadialGradientBrush>
                            <GradientStop Color="SeaGreen" Offset="1"/>
                            <GradientStop Color="MediumSeaGreen"/>
                            <GradientStop Color="LightSeaGreen" Offset="0.25"/>
                        </RadialGradientBrush>
                    </Grid.Background>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" Background="MediumSeaGreen">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="im_closedOrdersSearch" Stretch="Uniform" Grid.Column="0" Style="{StaticResource s_imageIcon}" Margin="5,0,0,0"/>
                                <TextBox x:Name="tb_closed_SearchTextBox" Grid.Column="1" Width="auto" MinWidth="100" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" TextChanged="Tb_closed_SearchTextBox_TextChanged" />

                            </Grid>
                            
                            <Label x:Name="lb_closed_Date" Content="Request Created" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <DatePicker x:Name="dp_closed_orderDate" HorizontalAlignment="Center" SelectedDateChanged="Dp_closed_orderDate_SelectedDateChanged" Margin="5,0"/>
                            <Button Name="pb_closed_resetDate" Content="Reset" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Click="Pb_closed_resetDate_Click"/>

                        </StackPanel>
                    </Grid>
                    <DataGrid x:Name="dg_orderDataGrid" Grid.Row="0" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="dg_addOrdercreateDateColumn" Header="Create Date" Width="SizeToHeader" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding CreateDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="dg_addOrderguestNameColumn" Binding="{Binding GuestName}" Header="Guest Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderRequestKeyColumn" Binding="{Binding GuestRequestKey}" Header="Guest Request Key" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderhostingUnitKeyColumn" Binding="{Binding HostingUnitKey}" Header="Hosting Unit Key" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderhostNameColumn" Binding="{Binding HostName}" Header="Host Name" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTemplateColumn x:Name="dg_addorderDateColumn" Header="Order Date" Width="*" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding OrderDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectedDateFormat="Short" Focusable="false" SelectedDateChanged="Dp_SelectedDateChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="dg_addOrderKey" Binding="{Binding OrderKey}" Header="Order Key" Width="*" MinWidth="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="dg_addOrderstatus" Binding="{Binding Status}" Header="Status" Width="*" MinWidth="100" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="2" Background="DarkSeaGreen" Grid.ColumnSpan="5">
                        <Button x:Name="pb_ClosedOrdersBack" Content="Back" HorizontalAlignment="Left" Margin="10,5" Padding="20,10"  Grid.Column="0" Click="Pb_back_Click"/>
                    </Grid>
                    <TextBlock Name="tb_order_error" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Visibility="Collapsed" Foreground="White" FontSize="40">
                        <TextBlock.Effect>
                            <DropShadowEffect/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Grid>
                
            </TabItem>

        </TabControl>
    </Grid>
</Window>


